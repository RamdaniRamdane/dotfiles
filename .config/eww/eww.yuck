(defwidget bar []
  (centerbox :orientation "v"
             :class "sideBar"
    (top)
    (center)
    (bottomstuff)))


;; Top ;; 
(defwidget top []
    (box :class "top"
         :space-evenly false
         :orientation "v"
         :valign "start"
      (button :oncklick "fuzzel &"
              :class "linux" "" )
       (workspaces)
     )
)




;; Wrokspaces ;;
(defwidget workspaces []
  (box :class "workspaces"
       :orientation "v"
    (button :onclick "bash ~/.config/river/scripts/tag 1" {wrk == 1 ? "" : ""})
    (button :onclick "bash ~/.config/river/scripts/tag 2" {wrk == 2 ? "" : ""})
    (button :onclick "bash ~/.config/river/scripts/tag 3" {wrk == 3 ? "" : ""})
    (button :onclick "bash ~/.config/river/scripts/tag 4" {wrk == 4 ? "" : ""})
    (button :onclick "bash ~/.config/river/scripts/tag 5" {wrk == 5 ? "" : ""})))

(deflisten wrk :initial 1 
'tail -F ~/.config/river/tmp/tag')


;; Center ;;
(defwidget center []
  (box :class "center"
       :orientation "v"
       :space-evenly false
       :valign "center"
    (label :text ""
           :tooltip date)))
(defpoll date :interval "1s"
  "date '+%d-%m-%Y'")



;; Bottom ;;
(defwidget bottomstuff []
  (box :class "bottomstuff" :orientation "v" :space-evenly false :valign "end"
    (label :class "bat"
           :text {wifiRSSI > -50 ? "󰤨" : wifiRSSI > -60 ? "󰤥" : wifiRSSI > -70 ? "󰤢" : wifiRSSI > -100 ? "󰤟" : "󰤭" }
           :tooltip "Wifi : ${wifiName}")
    (label :class {EWW_BATTERY.BAT0.status == "Charging" ? "green" : EWW_BATTERY.BAT0.capacity < 20 ? "red" : "bat"}    
           :text {EWW_BATTERY.BAT0.capacity > 90 ? "" : EWW_BATTERY.BAT0.capacity > 70 ? "" : EWW_BATTERY.BAT0.capacity > 50 ? "" : EWW_BATTERY.BAT0.capacity > 25 ? "" :""}
           :tooltip "Battery : ${EWW_BATTERY.BAT0.capacity}%")
    (time :class "time")
    (button :onclick "poweroff"
            :class "power" "⏻")

            ))

(defpoll wifiName :interval "1s"
  "./scripts/wifi name")
(defpoll wifiRSSI :interval "1s"
  "./scripts/wifi rssi")


;; Clock Widgets ;;
(defwidget time []
   (box :orientation "v" 
        :class "time" 
        :valign "end"
   (button :class "time-hour" hour)
   (button :class "time-min"  min)))


(defpoll hour :interval "1s"
  "date '+%H'")
(defpoll min :interval "1s" 
  "date '+%M'")




(defwindow bar
           :class "container"
           :monitor 0
           :geometry (geometry :x "0"
                               :y "0"
                               :width "35px"
                               :height "92%"
                               :anchor "center left")
           :exclusive true 
           :reserve (struts :distance "50px" :side "left")
           :wm-ignore false
 (bar)
)

